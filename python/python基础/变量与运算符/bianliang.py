'''
列表A,B   先把A乘以3，然后加上B，最后再加上列表A
[1,2,3,4,5,6]   [1,2,3]

'''

print([1,2,3,4,5,6]*3+[1,2,3]+[1,2,3,4,5,6]);

# 写起来很麻烦，可以用变量简略写
A = [1,2,3,4,5,6];
B = [1,2,3];
print(A*3+B+A);

skill = ['新月打击','苍白之瀑'];

#   变量名要求：字母，数字，下划线     首字母不能是数字,可以是 _
#   系统关键字   不能用在变量名中    保留关键字 and import if
#   type可以做变量名
'''
type = 1;
print(type) //1
type(1)     //会报错，相当于 1(1) 
'''


#   int  值类型   没改变
a = 1;
b = a;
a = 3;
print(b);

#   list    引用类型   改变了
m = [1,2,3]
n = m
m[0] = '1'
print(m)
print(n)

'''
值类型  int str tuple   不可变，只能申请新的空间进行改变数值
  a ----->1
  
  
  
  a  ------>| 
            |---> 1
  b ------->|
  
  
  
  
  a --------> 3
  
            |---> 1
  b ------->|
'''
'''
引用类型    list set dict   可变，本身的数值可以改变.   修改了，如a[1]='2',会直接报错
  a ----->[1,2,3]
  
  
  
  a  ------>| 
            |---> [1,2,3]
  b ------->|
  
  
  a  ------>| 
            |---> ['1',2,3]
  b ------->|
'''

print('------------------------')
a = 'hello'
print(id(a))
a = a + 'python'
print(id(a))
#   str是不可改变的类型，所以重新分配了一个内存
print(a)

print('------------计算机内部内存地址一般是用十六进制表示的------------')
b = [1,2,3]
print(id(b))
print(hex(id(b)))
b[0] = '1'
print(id(b))

print('-----------列表可以添加元素，而元组会报错-------------')
b = [1,2,3]
b.append(4)
print(b)

print('-----------访问元组内部的列表中的元素,访问4-------------')
a = (1,2,3,[1,2,4])
print('访问3是一维数组')
print(a[2])
print('访问4是二维数组')
print(a[3][2])













